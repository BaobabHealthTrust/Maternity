<%= javascript_include_tag "jquery" %>
<script language="javascript">
  var tt_cancel_destination = "/patients/show/<%= @patient.id %>"
  var currentWeight;
  var baby_date_map = "";
  var displayText = '';
  var apgarScore = 0;  
  displaySummary = 'false';

  var maxi;
  var mini;
  function $(e) {
    return document.getElementById(e);
  }

  function growthIndicators(){
    $('inputFrame'+tstCurrentPage).innerHTML = "";
    //These values pulled from the tt_onLoad bit in the third form...
    if (__$('discharge_outcome').value.toUpperCase()=='DELIVERED'){
      for (i = 1; i <= parseInt(document.getElementById("number_of_babies").value); i++){
        currentWeight = $('weight' + i).value;
        gender = $("baby_gender" + i).value;
        if (gender == "Male"){
          maxi = 4.5;
          mini = 2.5;
        }else if (gender == "Female"){
          maxi = 4.4;
          mini = 2.4;
        }
        showWeightForAge(i);
        showApgarScore(i);
        displayText += "<br>"
      }
      $('inputFrame'+tstCurrentPage).innerHTML = '<div id="summary" style="margin-bottom:4px;">' + displayText + '</div><div id="charts" style="height:185px;margin:4px 6px 6px;padding:2px;width:380px;"></div>';
      displayText = "";
    }
  }
  function showApgarScore(n){

    apgarScore = parseFloat($("appearance" + n).value) + parseFloat($("pulse" + n).value) + parseFloat($("grimance" + n).value) + parseFloat($("activity" + n).value) + parseFloat($("respiration" + n).value);

    displayText += "<div><span class='title'>Apgar score for baby " + n + ":</span>";
    if (apgarScore >= 7){
      displayText += "<span class='normal'> [" + apgarScore.toFixed(1) + "/10] </span>" + "<span class ='recommendation'> Normal </span><br>";
    } else if (apgarScore <=3) {
      displayText += "<span class='red_alert'> [" + apgarScore.toFixed(1) + "/10] </span>" + " <span class='recommendation'> Low </span><br>";
    } else {
      displayText += "<span class='yellow_alert'> [" + apgarScore.toFixed(1) + "/10] </span>" + " <span class='recommendation'> Fairly Low </span><br>";
    }
    displayText += "</div>";
  }
  function showApgarControl(baby){
    var apgar = {"APPEARANCE": 0,
      "PULSE" : 0,
      "GRIMANCE": 0,
      "ACTIVITY": 0,
      "RESPIRATION": 0
    };
    var apgarCheck = {"APPEARANCE": "?",
      "PULSE" : "?",
      "GRIMANCE": "?",
      "ACTIVITY": "?",
      "RESPIRATION": "?"
    };
    $('touchscreenInput'+tstCurrentPage).value =  "";
    apgarScore = 0;
    $("clearButton").onclick = function(){
      cells = document.getElementsByClassName("butt");
      for( i = 0; 0 < cells.length; i++){
        cells[i].setAttribute("selected", "false");
        cells[i].style.background = "url('/images/btn_blue.png'";
        apgar["APPEARANCE"] = 0; apgar["PULSE"] = 0; apgar["GRIMANCE"] = 0; apgar["ACTIVITY"] = 0; apgar["RESPIRATION"] = 0;
        apgarCheck["APPEARANCE"] = "?"; apgarCheck["PULSE"] = "?"; apgarCheck["GRIMANCE"] = "?";
        apgarCheck["ACTIVITY"] = "?"; apgarCheck["RESPIRATION"] = "?";
        showCategory("Apgar = " + apgarCheck['APPEARANCE'] + "+" + apgarCheck['PULSE'] +"+"+ apgarCheck['GRIMANCE']
          + "+" + apgarCheck['ACTIVITY'] + "+" + apgarCheck['RESPIRATION']);
      }
    }
    

    scoreWindow = document.createElement("div");
    scoreWindow.setAttribute("id", "selectWindow");

    arr = ["Appearance", "Pulse", "Grimance", "Activity", "Respiration"]
    arr_val = ['Blue, Pale', "Pink </br> Extreme blue", "Completely </br> pink",
      "Absent", "Below </br>100 bpm", "Over </br>100 bpm",
      "Flaccid", "Some Flexion </br> of Extremities", "Active motion",
      "Absent", "Arms and legs</br> flexed", "Active movement",
      "Absent", "Slow, </br> irregular", "Vigorous cry"];

    val_index = 0;
    values = [0, 1, 2]
    var labels = document.createElement("div");
    labels.id = "row1";

    placebo = document.createElement("div");
    placebo.id = "placebo";
    labels.appendChild(placebo);

    for(i = 0; i < values.length; i++){
      var lblCell = document.createElement("div");
      lblCell.setAttribute("class", "value");
      lblCell.innerHTML = (i == 2)? (i + " Points") : (i + " Point")
      labels.appendChild(lblCell);
    }
    scoreWindow.appendChild(labels);

    for (i = 0; i < arr.length; i ++){
      var row = document.createElement("div");
      row.id = "apgar_row_" + i
      row.setAttribute("class", "boardRow");

      for (j = 0; j < 4; j++){
        var control = document.createElement("div");
        control.id = "" + i + j;
        if (j != 0){

          control.setAttribute("class", "butt");
          control.setAttribute("value", j-1);
          control.setAttribute("apgar_field", arr[i]);
          control.setAttribute("selected", "false");
          control.setAttribute("i", i);
          control.setAttribute("j", j);


          control.innerHTML = arr_val[val_index];
          val_index ++;

          control.onclick = function(){
            var num = __$(this.id).getAttribute("value");
            var field = __$(this.id).getAttribute("apgar_field");
            var key = field.toUpperCase();
            apgar[key] = num;
            apgarCheck[key] = apgar[key];
            //update row selections

            if (__$(this.id).getAttribute("selected") == "false"){

              for(k = 1; k < 4; k++){
                var x = this.getAttribute("i");
                __$("" + x + k).setAttribute("selected", ( this.id != "" + x + k)? "false": "true");

                __$("" + x + k).style.background = ( this.id != "" + x + k)? "url('/images/btn_blue.png')" : "url('/images/click_btn.png')";
              }
            }

            __$(field.toLowerCase()+ baby).value = apgar[key];
            apgarScore = parseInt(apgar['APPEARANCE']) + parseInt(apgar['PULSE'])
              + parseInt(apgar['GRIMANCE']) + parseInt(apgar['ACTIVITY']) + parseInt(apgar['RESPIRATION']);
            showCategory("Apgar = " + apgarCheck['APPEARANCE'] + "+" + apgarCheck['PULSE'] +"+"+ apgarCheck['GRIMANCE']
              + "+" + apgarCheck['ACTIVITY'] + "+" + apgarCheck['RESPIRATION']);
            if (apgarCheck["APPEARANCE"] != "?" && apgarCheck["PULSE"] != "?" && apgarCheck["GRIMANCE"] != "?" && apgarCheck["ACTIVITY"] != "?" && apgarCheck["RESPIRATION"] != "?"){
              $('touchscreenInput'+tstCurrentPage).value = apgarScore;
            }
          };

        }else{control.innerHTML = arr[i];
          control.setAttribute("class", "leftButt");
        }
        row.appendChild(control);
      }
      scoreWindow.appendChild(row);
    }
    $('inputFrame' + tstCurrentPage).appendChild(scoreWindow);
  }

  function showWeightForAge(baby){
    $('weight_for_age').value = currentWeight;
    displayText += "<div><span class='title'>Weight for age for baby " + baby + ":</span>";
    if ((currentWeight <= maxi) && (currentWeight >=mini)){
      displayText += "<span class='normal'>" + currentWeight + "(Kg)" + "</span>" + " <span class='recommendation'> Normal </span><br>";
    } else if (currentWeight > maxi) {
      displayText += "<span class='yellow_alert'>" + currentWeight + '(Kg)' + "</span>" + " <span class='recommendation'> Over Weight </span><br>";
    } else if (currentWeight < mini){
      displayText += "<span class='red_alert'>" + currentWeight + '(Kg)' + "</span>" + " <span class='recommendation'> Under Weight</span><br>";
    }
    displayText += "</div>";
  }
  function isValidDateFormat(value){
    return value.trim().match(/(\d{4})\-(\d{2})\-(\d{2})\s(\d{2})\:(\d{2})/);
  }
  function isValidTimeFormat(value){
    return value.trim().match(/(\d{2})\:(\d{2})/);
  }
  function createDate(value){
    var d = isValidDateFormat(value);
    if(d){
      return new Date(eval(d[1]),(eval(d[2])-1),eval(d[3]),eval(d[4]),eval(d[5]));
    } else {
      return new Date();
    }
  }
  function dateTimeFormatted(value){
    return value.getFullYear() + "-" + padZeros((value.getMonth() + 1),2) + "-" +
      padZeros(value.getDate(),2) + " " + padZeros(value.getHours(),2) + ":" +
      padZeros(value.getMinutes(),2)
  }
  function mergeDateTime(date, time){
    var t = isValidTimeFormat(time);
    if(t){
      return new Date(date.getFullYear(), date.getMonth(), date.getDate(), eval(t[1]), eval(t[2]));
    } else {
      return date;
    }
  }
  function updateTimeOtherFields(group){
    var outcome_date = __$("baby" + group + "_outcome_date").value.trim();
    var delivery_mode_date = __$("baby" + group + "_delivery_mode_date").value.trim();
    var time = __$("time_of_delivery" + group).value.trim();
    if(isValidTimeFormat(time)){
      outcome_date = createDate(outcome_date);
      outcome_date = mergeDateTime(outcome_date, time);
      __$("baby" + group + "_outcome_date").value = dateTimeFormatted(outcome_date);
      delivery_mode_date = createDate(delivery_mode_date);
      delivery_mode_date = mergeDateTime(delivery_mode_date, time);
      __$("baby" + group + "_delivery_mode_date").value = dateTimeFormatted(delivery_mode_date);
      if(group == 1){
        var number_of_babies_date = __$("number_of_babies_date").value.trim();
        number_of_babies_date = createDate(number_of_babies_date);
        number_of_babies_date = mergeDateTime(number_of_babies_date, time);
        __$("number_of_babies_date").value = dateTimeFormatted(number_of_babies_date);
      }
    }
  }
  function updateDateOtherFields(group){
    var outcome_date = createDate(__$("baby" + group + "_outcome_date").value.trim());
    var delivery_mode_date = createDate(__$("baby" + group + "_delivery_mode_date").value.trim());
    var date = __$("date_of_delivery" + group).value.trim();
    var time = padZeros(outcome_date.getHours(),2) + ":" + padZeros(outcome_date.getMinutes(),2);
    if(isValidTimeFormat(time)){
      date = createDate(date);
      date = mergeDateTime(date, time);
      __$("baby" + group + "_outcome_date").value = dateTimeFormatted(date);
    }
    date = __$("date_of_delivery" + group).value.trim();
    time = padZeros(delivery_mode_date.getHours(),2) + ":" + padZeros(delivery_mode_date.getMinutes(),2);
    if(isValidTimeFormat(time)){
      date = createDate(date);
      date = mergeDateTime(date, time);
      __$("baby" + group + "_delivery_mode_date").value = dateTimeFormatted(date);
    }
    var number_of_babies_date = createDate(__$("number_of_babies_date").value.trim());

    date = __$("date_of_delivery" + group).value.trim();
    time = padZeros(number_of_babies_date.getHours(),2) + ":" + padZeros(number_of_babies_date.getMinutes(),2);
    if(group == 1 && isValidTimeFormat(time)){
      number_of_babies_date = createDate(number_of_babies_date);
      number_of_babies_date = mergeDateTime(number_of_babies_date, time);
      __$("number_of_babies_date").value = dateTimeFormatted(number_of_babies_date);
    }
  }
  // Every 500 milliseconds update the Next/Finish button
  function updateNextFinish(){
    if (tstInputTarget.value == '')
      $('nextButton').innerHTML = '<span>Finish</span>';
    else
      $('nextButton').innerHTML = '<span>Next</span>';
    setTimeout(updateNextFinish, 500);
  }
  function calculateBabyOutcomeDate(baby){
    var baby_time = __$("time_of_delivery" + baby).value.trim();
    var b_date = __$("date_of_delivery" + baby).value.trim() + " 00:00";
    var baby_date = createDate(b_date);
    merged_date = mergeDateTime(baby_date, baby_time);
    baby_date_map += baby + "," +  dateTimeFormatted(merged_date) + "!";
    document.forms[0].action = "/encounters/create/<%= params[:patient_id] %>?baby_date_map=" + baby_date_map;
  }

</script>

<style type="text/css">
  #space { display:inline; font-size:1.2em; }
  #Unknown {display: none;}
  #num {display: none;}

  .n #Unknown{
    display: block;
  }
  #summary {
    padding:10px;
    font-size:1.8em;
  }
  #char {
    display: none;
  }
  .title {
    text-decoration:underline;
    margin-right:10px;
  }

  .red_alert {color:black;background:red;border:5px solid white;}
  .yellow_alert {color:black;background:yellow;border:5px solid white;}
  .normal {color:black;}

  #tt_page_summary .inputFrameClass { height:84%; }

  #qwerty{ display:none; }

  .numericKeyboard #char, #slash, #star, #plus, #date, #minus, #comma, #percent {
    display: none;
  }

  #selectWindow{
    display: table;
    width: 85%;
    height:80%;
    border:1px solid #999999;
    align: center;
    border-spacing: 8px;
    margin-left:auto;
    margin-right:auto;
    border-radius: 10px;
    background: white;
    margin-top: 17px;
  }
  .butt{
    font-family: sans-serif;
    font-size:1.1em;
    -moz-border-radius: 5px;
    border-radius: 10px;
    display:table-cell;
    background: url('/images/btn_blue.png');
    border:1px solid #999999;
    border-color:gray;
    color: white;
    vertical-align: middle;
    height: auto;
    width: auto;
    max-width: 73px;
    text-align: center;
  }
  .leftButt, .value{
    font-size:1.3em;
    border-radius: 4px;
    font-weight: bold;
    background: white;
    display:table-cell;
    border:1px solid #999999;
    height: auto;
    color: rgb(5, 30, 5);
    width: auto;
    vertical-align: middle;
    text-align: center;
    max-width: 73px;
  }
  .value{
    height: 40px;
  }
  .boardRow{
    display: table-row;
    -moz-border-radius: 5px;
    border-radius: 5px;
    border-spacing: 5px;
  }
  #row1{
    display: table-row;
    -moz-border-radius: 5px;
    border-radius: 5px;
    border-spacing: 5px 5px 5px 5px;
  }


</style>

<form id='outcome' action="/encounters/create" method='post'>

  <%unless @patient_program.nil?%>
    <%= hidden_field_tag("programs[][patient_program_id]", @patient_program.id) %>
  <% end %>
  <%= hidden_field_tag("programs[][program_id]", Program.find_by_name('MATERNITY PROGRAM').id)%>
  <%= hidden_field_tag("programs[][location_id]", Location.current_health_center.id) %>
  <%= hidden_field_tag("programs[][date_enrolled]", session[:datetime] || Date.today ) %>
  <%= hidden_field_tag("programs[][states][][state]", "") %>


  <%= hidden_field_tag "encounter[patient_id]", @patient.id %>

  <%@presentation = [""] + Concept.find_by_name("PRESENTATION").concept_answers.collect{|c| c.name} %>
  <%@baby_outcome = [""] + Concept.find_by_name("BABY OUTCOME").concept_answers.collect{|c| c.name} %>
  <% @main_outcomes = [""] + Concept.find_by_name("MATERNITY OUTCOME").concept_members_names rescue [] %>
  <% @delivery_period = ["", "DELIVERED IN THE WARD",
    "DELIVERED BEFORE ARRIVAL",
    "DELIVERED IN THEATRE",
    "DELIVERED IN ANTENATAL WARD"] %>
  <% @mode_of_delivery = ["", "Forceps delivery", "Breech delivery"] %>
  <% @main_outcomes = @main_outcomes - ["Admitted"] %>

  <% @main_outcomes = @main_outcomes - ["Discharged"] if !@location.upcase.include?("POST") && !@location.upcase.include?("ANTE") %>

<%# @admission_section = ["", "ANTENATAL WARD", "LABOUR WARD", "GYNECOLOGY", "HDU"] %>
  <% @admission_section = @admission_wards %>

  <% if @facility.upcase.eql?("KAMUZU CENTRAL HOSPITAL")
    # @admission_section = @admission_section << "POSTNATAL WARD"
    @admission_section = @admission_section - ["Post-Natal Ward (High Risk)", "Post-Natal Ward (Low Risk)"]
  else
    # @admission_section << "POSTNATAL WARD - HIGH RISK"
    # @admission_section << "POSTNATAL WARD - LOW RISK"
    @admission_section = @admission_section - ["Post-Natal Ward"]
  end %>

  <%@delivery_mode = [""] + Concept.find_by_name("DELIVERY MODE").concept_answers.collect{|c| c.name} %>
  <%@procedure_done = [""] + Concept.find_by_name("PROCEDURE DONE").concept_answers.collect{|c| c.name}.sort %>
  <%@postpartum_type = ["", "TOTAL POSTPARTUM HYSTERECTOMY", "SUB-TOTAL POSTPARTUM HYSTERECTOMY"]%>
  <%@discharged_to_where = [["",""], ["Home", "Home"],
    ["Home - Waiting", "Home - Waiting"],
    ["Another Health Facility", "Another Health Facility"]]%>
  <%@health_facility = ["", "KCH"]%>

  <%= hidden_field_tag "encounter[encounter_type_name]", "UPDATE OUTCOME" %>
  <%= hidden_field_tag "encounter[patient_id]", @patient.id %>
  <%= hidden_field_tag "encounter[encounter_datetime]",
    (session[:datetime] ? session[:datetime].to_time : (session[:datetime] ? session[:datetime].to_time :
        DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>
  <%= hidden_field_tag "encounter[provider_id]", session[:user_id] %>

  <%
  # A condition for redirection to the HIV Status Update page if the patient has not been tested

  @admission_section = @admission_section - [(Location.current_location.name rescue "")]

  condition = "if($('discharge_outcome').value.toUpperCase() == 'DISCHARGED') {\
$('next_url').disabled = false;} else {$('next_url').disabled = true; }"

  if @patient.current_hiv_status.nil?

    condition = "if($('discharge_outcome').value.toUpperCase() == 'DISCHARGED') {document.forms[0].method='post'; document.forms[0].action = \
  'update_hiv_status?patient_id=#{@patient.id}';} \
  else {$('next_url').disabled = true; }"

  elsif (@patient.current_hiv_status[0].upcase rescue "").eql?("NOT TESTED")

    condition = "if($('discharge_outcome').value.toUpperCase() == 'DISCHARGED') {document.forms[0].method='post'; document.forms[0].action = \
  'update_hiv_status?patient_id=#{@patient.id}';} \
  else {$('next_url').disabled = true; }"

  end
%>
  <% options = {
    :id =>"discharge_outcome",
    :helpText => 'Outcome',
    :tt_onUnLoad => condition
  } %>
  <%= hidden_field_tag("observations[][concept_name]", "OUTCOME") %>
  <%= select_tag("observations[][value_coded_or_text]", options_for_select(@main_outcomes.sort()), options)%>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time :
        DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

  <% if CoreService.get_global_property_value('extra_delivery_mode')%>
    <% @delivery_mode.concat(["FORCEPS DELIVERY"]) %>
  <%end%>

  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

  <% options = {
    :id => "discharged_to_where",
    :field_type => 'text',
    :helptext =>"Discharged to where?",
    :tt_onUnLoad => "if($('discharged_to_where').value.toUpperCase() == 'HOME - WAITING' || " +
      "$('discharged_to_where').value.toUpperCase() == 'ANOTHER HEALTH FACILITY')\
  {$('discharged_to_where_value_coded_or_text').value = $('discharged_to_where').value; \
  $('next_url').disabled = false;} else {$('next_url').disabled = true;}"
  }%>

  <% options[:condition] = "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED')" %>

  <%= select_tag("discharged_to_where", options_for_select(@discharged_to_where), options)%>

  <% options = {
    :id => "health_facility",
    :field_type => 'text',
    :helptext =>"Which health facility",
    :allowFreeText => true,
    :ajaxURL => "/encounters/locations?search_string=",
    :tt_onUnLoad => "$('discharged_to_where_value_coded_or_text').value = $('health_facility').value;"
  }%>

  <% options[:condition] = "($('discharged_to_where').value.toUpperCase() == 'ANOTHER HEALTH FACILITY')" %>

  <%= select_tag("health_facility", options_for_select(@health_facility), options)%>
<%#= text_field_tag("health_facility", nil, options)%>

  <%= hidden_field_tag("observations[][concept_name]", "DISCHARGED") %>
  <%= hidden_field_tag("observations[][value_coded_or_text]", "", {:id => 'discharged_to_where_value_coded_or_text'}) %>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>


  <% options = {
    :id => "admission_section",
    :field_type => 'text',
    :helptext =>"Select admission section",
    :condition => "($('discharge_outcome').value.toUpperCase() == 'ADMITTED')"
  }%>

  <%= hidden_field_tag("observations[][concept_name]", "ADMISSION SECTION") %>
  <%= select_tag("observations[][value_coded_or_text]", options_for_select(@admission_section), options)%>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

<%# options = {
:id => "delivery_period",
:field_type => 'text',
:helptext =>"Delivery Period",
:condition => "($('discharge_outcome').value == 'Delivered')"
} %>
<%#= select_tag("observations[][value_coded_or_text]", options_for_select(@delivery_period), options)%>
<%#= hidden_field_tag("observations[][concept_name]", "DELIVERY PERIOD") %>
<%#= hidden_field_tag("observations[][patient_id]", @patient.id) %>
<%#= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

  <% options = {
    :id => "number_of_babies",
    :field_type => 'number',
    :helptext =>"Number of babies",
    :condition => (@location.downcase == "ante-natal ward" ? "false" :
        "($('discharge_outcome').value.toUpperCase() == 'DELIVERED' || $('discharge_outcome').value.toUpperCase() == 'DISCHARGED')"),
    :tt_pageStyleClass => "Numeric NumbersOnly",
    :absoluteMin => 1
  }%>
  <%= hidden_field_tag("observations[][concept_name]", "NUMBER OF BABIES")%>
  <%= text_field_tag("observations[][value_coded_or_text]", nil, options)%>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]",
    (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M"),
    {
      :id => "number_of_babies_date"
    }) %>

  <%
  prefixes = {
    1=>"st",
    2=>"nd",
    3=>"rd",
    4=>"th",
    5=>"th",
    6=>"th",
    7=>"th",
    8=>"th",
    9=>"th",
    10=>"th"
  }
%>
  <% (1..10).each do |baby| %>

    <% options = {
      :id => "time_of_delivery#{baby}",
      :field_type => 'advancedTime',
      :helptext =>"#{baby}<sup>#{prefixes[baby]}</sup> Baby: Time of Delivery",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('discharge_outcome').value.toUpperCase() == 'DELIVERED' && parseInt($('number_of_babies').value) > #{baby - 1}) /*|| " +
          "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED' && parseInt($('number_of_babies').value) > #{baby - 1})*/"),
      :tt_onUnLoad => "updateTimeOtherFields(#{baby})"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "TIME OF DELIVERY")%>
    <%= text_field_tag("observations[][value_time]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ?
          session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "date_of_delivery#{baby}",
      :field_type => 'date',
      :helptext =>"#{baby}<sup>#{prefixes[baby]}</sup> Baby: Date of Delivery",
      :tt_onUnLoad => "calculateBabyOutcomeDate(#{baby})",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('discharge_outcome').value.toUpperCase() == 'DELIVERED' && parseInt($('number_of_babies').value) > #{baby - 1}) /*|| " +
          "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED' && parseInt($('number_of_babies').value) > #{baby - 1})*/")
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "DATE OF DELIVERY")%>
    <%= text_field_tag("observations[][value_datetime]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ?
          session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>


    <% options = {
      :id => "presentation#{baby}",
      :field_type => 'text',
      :helptext =>"#{baby}<sup>#{prefixes[baby]}</sup> Baby: Presentation",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "(($('discharge_outcome').value.toUpperCase() == 'DELIVERED' /*|| $('discharge_outcome').value.toUpperCase() == 'DISCHARGED'*/) " +
          " && parseInt($('number_of_babies').value) > #{baby - 1})")
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "PRESENTATION") %>
    <%= select_tag("observations[][value_coded_or_text]", options_for_select(@presentation), options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "baby_outcome#{baby}",
      :field_type => 'text',
      :helptext =>"#{baby}<sup>#{prefixes[baby]}</sup> Baby: Delivery Outcome",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('discharge_outcome').value.toUpperCase() == 'DELIVERED' && parseInt($('number_of_babies').value) > #{baby - 1})")
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "BABY OUTCOME") %>
    <%= select_tag("observations[][value_coded_or_text]", options_for_select(@baby_outcome), options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]",
      (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M"),
      {
        :id => "baby#{baby}_outcome_date"
      }) %>

    <% options = {
      :id => "baby_outcome#{baby}_status",
      :field_type => 'text',
      :helptext =>"#{baby}<sup>#{prefixes[baby]}</sup> Baby: Outcome",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED' && parseInt($('number_of_babies').value) > #{baby - 1})")
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "STATUS OF BABY") %>
    <%= select_tag("observations[][value_coded_or_text]", options_for_select(@baby_outcome), options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]",
      (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M"),
      {
        :id => "baby#{baby}_outcome_date_status"
      }) %>

    <% options = {
      :id => "baby_gender#{baby}",
      :field_type => 'text',
      :helptext =>"#{baby}<sup>#{prefixes[baby]}</sup> Baby: Gender",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('discharge_outcome').value.toUpperCase() == 'DELIVERED' && parseInt($('number_of_babies').value) > #{baby - 1}) /*|| " +
          "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED' && parseInt($('number_of_babies').value) > #{baby - 1})*/")
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "Gender of contact") %>
    <%= select_tag("observations[][value_coded_or_text]", options_for_select(["", "Male", "Female"]), options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <%= touch_text_field_tag "WEIGHT (KG)", @patient, nil,
      {	:id => "weight#{baby}",
      :field_type => 'number',
      :helptext =>"#{baby}<sup>#{prefixes[baby]}</sup> Baby: Weight (KG)",
      :tt_onUnLoad => "displaySummary='true';",
      :min => number_with_precision(2.5, :precision => 1),
      :max => number_with_precision(4.5, :precision => 1),
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('discharge_outcome').value.toUpperCase() == 'DELIVERED' && parseInt($('number_of_babies').value) > #{baby - 1}) /*|| " +
          "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED' && parseInt($('number_of_babies').value) > #{baby - 1})*/"),
      :absoluteMin => 0,
      :absoluteMax => 228,
      :validationRule => "([0-9]+(\\.[0-9])?)|Unknown$",
      :validationMessage => "You must enter a number between 0 and 15 (for example: 54<b>.6</b>)",
      :tt_pageStyleClass => "unknownButton"} %>

    <%= touch_text_field_tag "HEIGHT (CM)", @patient, nil,
      {	:id => "height#{baby}",
      :field_type => "number",
      :tt_onLoad => "$('clearButton').style.display = 'inline'; $('Unknown').style.display = 'block'; ",
      :tt_onUnLoad => "$('Unknown').style.display = 'block'; ",
      :min => number_with_precision(15, :precision => 1),
      :max => number_with_precision(60, :precision => 1),
      :absoluteMin => 0,
      :absoluteMax => 100,
      :units => 'cm',
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('discharge_outcome').value.toUpperCase() == 'DELIVERED' && parseInt($('number_of_babies').value) > #{baby - 1}) /*|| " +
          "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED' && parseInt($('number_of_babies').value) > #{baby - 1})*/"),
      :validationRule => "^([0-9]+)|Unknown$",
      :validationMessage => "You must enter numbers only (for example 157)",
      :tt_pageStyleClass => "unknownButton ",
      :helptext =>"#{baby}<sup>#{prefixes[baby]}</sup> Baby: Height (CM)" } %>
    <% if CoreService.get_global_property_value("show_apgar")%>
      <% options = {
        :id => "appearance#{baby}"
      }%>
      <%= hidden_field_tag("observations[][concept_name]", "APPEARANCE")%>
      <%= hidden_field_tag("observations[][value_coded_or_text]", nil, options)%>
      <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
      <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ?
            session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

      <% options = {
        :id => "pulse#{baby}"
      }%>
      <%= hidden_field_tag("observations[][concept_name]", "PULSE")%>
      <%= hidden_field_tag("observations[][value_coded_or_text]", nil, options)%>
      <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
      <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ?
            session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

      <% options = {
        :id => "grimance#{baby}"
      }%>
      <%= hidden_field_tag("observations[][concept_name]", "GRIMANCE")%>
      <%= hidden_field_tag("observations[][value_coded_or_text]", nil, options)%>
      <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
      <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ?
            session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

      <% options = {
        :id => "activity#{baby}"
      }%>
      <%= hidden_field_tag("observations[][concept_name]", "ACTIVITY")%>
      <%= hidden_field_tag("observations[][value_coded_or_text]", nil, options)%>
      <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
      <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ?
            session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

      <% options = {
        :id => "respiration#{baby}"
      }%>
      <%= hidden_field_tag("observations[][concept_name]", "RESPIRATION")%>
      <%= hidden_field_tag("observations[][value_coded_or_text]", nil, options)%>
      <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
      <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ?
            session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

      <%= touch_text_field_tag "APGAR", @patient, nil,
        {	:id => "apgar#{baby}",
        :field_type => 'number',
        :helptext =>"#{baby}<sup>#{prefixes[baby]}</sup> Baby: Apgar",
        :condition => (@location.downcase == "ante-natal ward" ? "false" :
            "($('discharge_outcome').value.toUpperCase() == 'DELIVERED' && parseInt($('number_of_babies').value) > #{baby - 1}) /*|| " +
            "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED' && parseInt($('number_of_babies').value) > #{baby - 1})*/"),
        :absoluteMin => 0,
        :absoluteMax => 10,
        :tt_onLoad => "showApgarControl(#{baby})",
        :tt_onUnLoad => "displaySummary='true';",
        :tt_pageStyleClass => "NoKeyboard"
      } %>

    <%end%>

    <% options = {
      :id => "delivery_mode#{baby}",
      :field_type => 'text',
      :helptext =>"#{baby}<sup>#{prefixes[baby]}</sup> Baby: Delivery Mode",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('discharge_outcome').value.toUpperCase() == 'DELIVERED' && parseInt($('number_of_babies').value) > #{baby - 1}) /*|| " +
          "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED' && parseInt($('number_of_babies').value) > #{baby - 1})*/")
    }%>

    <%= hidden_field_tag("observations[][concept_name]", "DELIVERY MODE") %>
    <%= select_tag("observations[][value_coded_or_text]", options_for_select(@delivery_mode.uniq), options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]",
      (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M"),
      {
        :id => "baby#{baby}_delivery_mode_date"
      }) %>

  <% end %>

  <% options = {
    :id => "perineum",
    :field_type => 'text',
    :helptext =>"Perineum",
    :condition => (@location.downcase == "ante-natal ward" ? "false" :
        "($('discharge_outcome').value.toUpperCase() == 'DELIVERED')")
  }%>
  <%= hidden_field_tag("observations[][concept_name]", "PERINEUM") %>
  <%= select_tag("observations[][value_coded_or_text]",
    options_for_select(["", "Intact", "Tear", "Episiotomy", "Laceration"]), options)%>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

  <% options = {
    :id => "tear",
    :field_type => 'text',
    :helptext =>"Tear Extent",
    :condition => (@location.downcase == "ante-natal ward" ? "false" :
        "($('perineum').value.toUpperCase() == 'TEAR')"),
    :tt_onLoad => '__$("touchscreenInput" + tstCurrentPage).style.display = "none";'
  }%>

  <%= hidden_field_tag("observations[][concept_name]", "TEAR") %>
  <%= select_tag("observations[][value_coded_or_text]",
    options_for_select([
        ["", ""],
        ["1<sup>o</sup>", "1 Degree"],
        ["2<sup>o</sup>", "2 Degrees"],
        ["3<sup>o</sup>", "3 Degrees"],
        ["4<sup>o</sup>", "4 Degrees"]]), options)%>

  <!-- DIAGNOSIS -->


<%# This options hash allows us to define our options in one place %>
  <% options = {
    :helpText => 'Select discharge diagnosis',
    :allowFreeText => 'true',
    :ajaxURL => "/encounters/diagnoses?search_string=",
    :textCase => "upper",
    :tt_pageStyleClass => "n qwertyKeyboardOnly",
    :condition => (@location.downcase == "ante-natal ward" ? "false" :
        "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED')")
  } %>

  <% options[:id] = 'diagnosis0' %>
  <% options[:tt_onLoad] = "__$('Unknown').innerHTML='<span>N/A</span>'; " +
    "__$('Unknown').onclick=function(){__$('touchscreenInput'+tstCurrentPage).value='N/A'}; " +
    "$('nextButton').innerHTML = '<span>Finish</span>';" %>

  <% options[:optional] = 'true' %>
  <%= text_field_tag("observations[][value_coded_or_text]", nil, options) %>
  <%= hidden_field_tag("observations[][concept_name]", "DIAGNOSIS", options) %>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", DateTime.now()) %>

  <% options[:tt_onLoad] = "setTimeout(updateNextFinish, 20)" %>

  <% 10.times do |counter| %>
    <% options[:condition] = (@location.downcase == "ante-natal ward" && counter > 0 ? "false" :
        "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED') && __$('diagnosis#{counter}').value != '' && " +
        "__$('diagnosis0').value != 'N/A'" ) %>

    <% options[:helpText] = "Select the next diagnosis" %>
    <% options[:tt_pageStyleClass] = "qwertyKeyboardOnly" %>

    <% options[:id] = "diagnosis#{counter + 1}" %>

    <%= text_field_tag("observations[][value_coded_or_text]", nil, options) %>
    <%= hidden_field_tag("observations[][concept_name]", "DIAGNOSIS", options) %>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", DateTime.now()) %>

    <% counter += 1 %>
  <% end %>

  <% 10.times do |counter| %>
    <% options = {
      :id => "estimated_time_of_delivery",
      :field_type => 'time',
      :helptext =>"Estimated Time of Delivery",
      :condition => "(tstFormElements[#{counter}].value == 'BORN BEFORE ARRIVAL')"
    }%>
    <%= text_field_tag("observations[][value_time]", nil, options)%>
    <%= hidden_field_tag("observations[][concept_name]", "ESTIMATED TIME FOR DELIVERY BEFORE ARRIVAL")%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", DateTime.now()) %>

    <% options = {
      :id => "estimated_date_of_delivery",
      :field_type => 'date',
      :helptext =>"Estimated Date of Delivery",
      :condition => "(tstFormElements[#{counter}].value == 'BORN BEFORE ARRIVAL')"
    }%>
    <%= text_field_tag("observations[][value_datetime]", nil, options)%>
    <%= hidden_field_tag("observations[][concept_name]", "ESTIMATED DATE")%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", DateTime.now()) %>

    <% counter += 1 %>
  <% end %>

  <% (1..5).each do |proc| %>

    <% options = {
      :id => "procedure_done#{proc}",
      :field_type => 'text',
      :helptext =>"#{proc}<sup>#{prefixes[proc]}</sup> Procedure Done",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('discharge_outcome').value.toUpperCase() == 'DELIVERED' || " +
          "$('discharge_outcome').value.toUpperCase() == 'DISCHARGED') #{proc > 1 ?
        "&& (__$('procedure_done#{proc - 1}').value != '' && __$('procedure_done#{proc - 1}').value != 'None')":"" }"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>

    <%
    if proc > 1
      options["optional"] = "true"
    end
  %>

    <%
    @procedure_done = @procedure_done - ["None"] if proc > 1
  %>
    <%= hidden_field_tag("observations[][concept_name]", "PROCEDURE DONE") %>
    <%= select_tag("observations[][value_coded_or_text]", options_for_select(@procedure_done), options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "postpartum_type",
      :field_type => 'text',
      :helptext =>"Select Postpartum Hesterectomy Type",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value == 'POSTPARTUM HYSTERECTOMY')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "POSTPARTUM HYSTERECTOMY") %>
    <%= select_tag("observations[][value_coded_or_text]", options_for_select(@postpartum_type), options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

  <% end %>

  <%= touch_hidden_tag "WT FOR AGE", @patient, nil, {:id => 'weight_for_age'} %>

  <%= text_field_tag :showSummary, nil,
    {	:tt_onLoad => "$('clearButton').style.display = 'none';growthIndicators()",
    :tt_onUnLoad => "$('clearButton').style.display = 'inline';",
    :helpText => "Summary",
    :condition => "displaySummary == 'true'",
    :optional => "true",
    :tt_pageStyleClass => "NoControls" } %>

<%#= hidden_field_tag "next_url", "/encounters/new/admission_diagnosis/?patient_id=#{@patient.id}", {:disabled => true} %>

  <% if @location.downcase == "ante-natal ward" %>
    <%= hidden_field_tag "next_url", "/patients/show/#{@patient.id}", {:disabled => true} %>
  <% else %>
    <%= hidden_field_tag "next_url", "/encounters/new/refer_out/?patient_id=#{@patient.id}", {:disabled => true} %>
  <% end %>

  <%= submit_tag "Finish" %>

</form>
