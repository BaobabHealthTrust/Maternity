<%= javascript_include_tag "jquery" %>
<script language="javascript">
  var tt_cancel_destination = "/patients/show/<%= @patient.id %>?skip_check=true"
  var currentWeight;
  var baby_date_map = "";
  var displayText = "";
  var apgarScore = 0; 
  displaySummary = 'false'; 
  var timedEvent;
  var baby;
  var maxi;
  var mini;
  var baby_obs = "";
  function $(e) {
    return document.getElementById(e);
  }

  function growthIndicators(){
    $('inputFrame'+tstCurrentPage).innerHTML = "";
    //These values pulled from the tt_onLoad bit in the third form...
    if (__$('discharge_outcome').value.toUpperCase()=='DELIVERED'){

      headers = ["    ", "WEIGHT", "APGAR"];
      var alertsTable = document.createElement("div");
      alertsTable.id = "alertsTable";
      var alertsHeaderRow = document.createElement("div");
      alertsHeaderRow.setAttribute("class", "alertsHeaderRow");
      for (j = 0; j < headers.length; j++){
        var alertsHeader = document.createElement("div");
        alertsHeader.setAttribute("class", "alertsHeader");        
        alertsHeader.innerHTML = headers[j];
        alertsHeaderRow.appendChild(alertsHeader);
      }
      alertsTable.appendChild(alertsHeaderRow);
      
      for (i = 1; i <= parseInt(document.getElementById("number_of_babies").value); i++){
        currentWeight = $('weight' + i).value;
        gender = $("baby_gender" + i).value;
        if (gender == "Male"){
          maxi = 4500.0;
          mini = 2500.0;
        }else if (gender == "Female"){
          maxi = 4400.0;
          mini = 2400.0;
        }

        var alertsRow = document.createElement("div");
        alertsRow.setAttribute("class", "alertsRow");
        // add the left title of the table row
        var alertsTitle = document.createElement("div");
        alertsTitle.setAttribute("class", "alertsTitle");       
        alertsTitle.innerHTML = "<span>BABY " + i + "<span>";
        alertsRow.appendChild(alertsTitle);
        // add cell figures
     
        var alertsCell = document.createElement("div");
        alertsCell.setAttribute("class", "alertsCell");
        alertsCell.innerHTML = showWeightForAge(i);
        alertsRow.appendChild(alertsCell);

        var alertsCell2 = document.createElement("div");
        alertsCell2.setAttribute("class", "alertsCell");
        alertsCell2.innerHTML = showApgarScore(i);
        alertsRow.appendChild(alertsCell2);
        
        //add row to table
        alertsTable.appendChild(alertsRow);
      }     
      $('inputFrame'+tstCurrentPage).appendChild(alertsTable);
      displayText = "";
    }
  }
  function showApgarScore(n){
    displayText = ""
    apgarScore = parseFloat($("apgar" + n).value);
    if (apgarScore >= 7){
      displayText = "<span class='normal'> " + apgarScore.toFixed(0) + "/10 - Normal APGAR</span>";
    } else if (apgarScore <=3) {
      displayText = "<span class='red_alert'> " + apgarScore.toFixed(0) + "/10 - Low APGAR</span>";
    } else {
      displayText = "<span class='yellow_alert'> " + apgarScore.toFixed(0) + "/10 - Fairly Low </span>";
    }  
    return displayText
  }
  function showApgarControl(baby){
    apgarScore = 0;
    var apgar = {"APPEARANCE": 0,
      "PULSE" : 0,
      "GRIMANCE": 0,
      "ACTIVITY": 0,
      "RESPIRATION": 0
    };
    var apgarCheck = {"APPEARANCE": "?",
      "PULSE" : "?",
      "GRIMANCE": "?",
      "ACTIVITY": "?",
      "RESPIRATION": "?"
    };
   
    alert = document.createElement("div");    

    $("clearButton").onclick = function(){
      apgarScore = 0
      updateApgarAlert(apgarScore)
      cells = document.getElementsByClassName("butt");
      for( i = 0; 0 < cells.length; i++){
        cells[i].setAttribute("selected", "false");
        cells[i].style.background = "url('/images/btn_blue.png'";
        apgar["APPEARANCE"] = 0; apgar["PULSE"] = 0; apgar["GRIMANCE"] = 0; apgar["ACTIVITY"] = 0; apgar["RESPIRATION"] = 0;
        apgarCheck["APPEARANCE"] = "?"; apgarCheck["PULSE"] = "?"; apgarCheck["GRIMANCE"] = "?";
        apgarCheck["ACTIVITY"] = "?"; apgarCheck["RESPIRATION"] = "?";
        showCategory("<span style='font-size:27px;font-weight:bold;'>APGAR</span> = " + apgarCheck['APPEARANCE'] + "+" + apgarCheck['PULSE'] +"+"+ apgarCheck['GRIMANCE']
          + "+" + apgarCheck['ACTIVITY'] + "+" + apgarCheck['RESPIRATION']);
      }
    }
    $("clearButton").onclick.apply($("clearButton"));
    updateApgarAlert(apgarScore);
    scoreWindow = document.createElement("div");
    scoreWindow.setAttribute("id", "selectWindow");
    

    arr = ["Appearance", "Pulse", "Grimance", "Activity", "Respiration"]
    /*
    arr_val = ['Pale/blue', "Baby pink/</br>blue extremities", "Completely </br> pink",
      "None", "Slow -</br>Below 100 bpm", "Above </br>100 bpm",
      "Flaccid", "Some flexion </br> of Extremities", "Active Motion",
      "None", "Grimance", "Vigorous </br>cry",
      "Absent", "Slow - </br> irregular", "Good crying"];
     */
    // arr_labels = ["Color", "Heart Rate", "Muscle Tone", "Reflex Irritability", "Respiratory Effort"]
    arr_val = ['Blue, Pale', "Pink </br> Extreme blue", "Completely </br> pink",
      "Absent", "Below </br>100 bpm", "Over </br>100 bpm",
      "Flaccid", "Some Flexion </br> of Extremities", "Active motion",
      "Absent", "Arms and legs</br> flexed", "Active movement",
      "Absent", "Slow, </br> irregular", "Vigorous cry"];

    val_index = 0;
    values = [0, 1, 2]
    var labels = document.createElement("div");
    labels.id = "row1";
    
    placebo = document.createElement("div");
    placebo.id = "placebo";
    labels.appendChild(placebo);

    for(i = 0; i < values.length; i++){
      var lblCell = document.createElement("div");
      lblCell.setAttribute("class", "value");
      lblCell.innerHTML = (i == 2)? (i + " Points") : (i + " Point")
      labels.appendChild(lblCell);
    }
    scoreWindow.appendChild(labels);
   
    for (i = 0; i < arr.length; i ++){
      var row = document.createElement("div");
      row.id = "apgar_row_" + i
      row.setAttribute("class", "boardRow");

      for (j = 0; j < 4; j++){
        var control = document.createElement("div");
        control.id = "" + i + j;
        if (j != 0){
          
          control.setAttribute("class", "butt");
          control.setAttribute("value", j-1);
          control.setAttribute("apgar_field", arr[i]);
          // update/set selection status of the control
          if ((apgarCheck[arr[i].toUpperCase()] != "?") && ("" + i + (parseInt(apgarCheck[arr[i].toUpperCase()]) + 1) == control.id)){
            control.setAttribute("selected", "true");
          }else{ control.setAttribute("selected", "false"); }
          control.setAttribute("i", i);
          control.setAttribute("j", j);
          
          control.innerHTML = arr_val[val_index];
          val_index ++;
         
          control.onclick = function(){
            var num = __$(this.id).getAttribute("value");
            var field = __$(this.id).getAttribute("apgar_field");
            var key = field.toUpperCase();
            apgar[key] = num;
            apgarCheck[key] = apgar[key];
            //update row selections
            
            if (__$(this.id).getAttribute("selected") == "false"){
              
              for(k = 1; k < 4; k++){
                var x = this.getAttribute("i");
                __$("" + x + k).setAttribute("selected", ( this.id != "" + x + k)? "false": "true");
                
                __$("" + x + k).style.background = ( this.id != "" + x + k)? "url('/images/btn_blue.png')" : "url('/images/click_btn.png')";
                __$("" + x + k).style.Color= ( this.id != "" + x + k)? "black" : "white";
              }
            }
            __$(key.toLowerCase() + baby).value = apgar[key];
            apgarScore = parseInt(apgar['APPEARANCE']) + parseInt(apgar['PULSE'])
              + parseInt(apgar['GRIMANCE']) + parseInt(apgar['ACTIVITY']) + parseInt(apgar['RESPIRATION']);
            showCategory("<span style='font-size:27px;font-weight:bold;'>APGAR</span> = " + apgarCheck['APPEARANCE'] + "+" + apgarCheck['PULSE'] +"+"+ apgarCheck['GRIMANCE']
              + "+" + apgarCheck['ACTIVITY'] + "+" + apgarCheck['RESPIRATION']);
            if (apgarCheck["APPEARANCE"] != "?" && apgarCheck["PULSE"] != "?" && apgarCheck["GRIMANCE"] != "?" && apgarCheck["ACTIVITY"] != "?" && apgarCheck["RESPIRATION"] != "?"){
              $('touchscreenInput'+tstCurrentPage).value = apgarScore;
            }
            updateApgarAlert(apgarScore);
          };
          
          
        }else{control.innerHTML = arr[i];
          control.setAttribute("class", "leftButt");
        }
        row.appendChild(control);
      }
      scoreWindow.appendChild(row);    }

    $('inputFrame' + tstCurrentPage).style.display = "none";
    $('page' + tstCurrentPage).style.minHeight = "650px";
    $('page' + tstCurrentPage).appendChild(scoreWindow);
    $("page" + tstCurrentPage).appendChild(alert);
    
  }

  function updateApgarAlert(apgarScore){   
    if (apgarScore >= 7){
      text = "" + apgarScore.toFixed(0) + "/10 - Normal APGAR</span>";
      alert.id = "normal_apgar_alert";
    } else if (apgarScore <=3) {
      text = "" + apgarScore.toFixed(0) + "/10 - Low APGAR</span>";
      alert.id = "red_apgar_alert";
    } else {
      text = "" + apgarScore.toFixed(0) + "/10 - Fairly Low </span>";
      alert.id = "yellow_apgar_alert";
    }
    alert.innerHTML = text;
  }

  function showWeightForAge(baby){
    displayText = "";
    $('weight_for_age').value = currentWeight;   
    if ((currentWeight <= maxi) && (currentWeight >=mini)){
      displayText = "<span class='normal'>" + currentWeight + "g - Normal Weight </span>";
    } else if (currentWeight > maxi) {
      displayText = "<span class='yellow_alert'>" + currentWeight + "g - Over Weight </span>";
    } else if (currentWeight < mini){
      displayText = "<span class='red_alert'>" + currentWeight + "g - Under Weight</span>";
    }
    return displayText;
  }
  function isValidDateFormat(value){
    return value.trim().match(/(\d{4})\-(\d{2})\-(\d{2})\s(\d{2})\:(\d{2})/);
  }
  function isValidTimeFormat(value){
    return value.trim().match(/(\d{2})\:(\d{2})/);
  }
  function createDate(value){
    var d = isValidDateFormat(value);
    if(d){
      return new Date(eval(d[1]),(eval(d[2])-1),eval(d[3]),eval(d[4]),eval(d[5]));
    } else {
      return new Date();
    }
  }
  function dateTimeFormatted(value){
    return value.getFullYear() + "-" + padZeros((value.getMonth() + 1),2) + "-" +
      padZeros(value.getDate(),2) + " " + padZeros(value.getHours(),2) + ":" +
      padZeros(value.getMinutes(),2)
  }
  function mergeDateTime(date, time){
    var t = isValidTimeFormat(time);
    if(t){
      return new Date(date.getFullYear(), date.getMonth(), date.getDate(), eval(t[1]), eval(t[2]));
    } else {
      return date;
    }
  }
  function updateTimeOtherFields(group){
    var outcome_date = __$("baby" + group + "_outcome_date").value.trim();
    var delivery_mode_date = __$("baby" + group + "_delivery_mode_date").value.trim();
    var time = __$("time_of_delivery" + group).value.trim();
    if(isValidTimeFormat(time)){
      outcome_date = createDate(outcome_date);
      outcome_date = mergeDateTime(outcome_date, time);
      __$("baby" + group + "_outcome_date").value = dateTimeFormatted(outcome_date);
      delivery_mode_date = createDate(delivery_mode_date);
      delivery_mode_date = mergeDateTime(delivery_mode_date, time);
      __$("baby" + group + "_delivery_mode_date").value = dateTimeFormatted(delivery_mode_date);
      if(group == 1){
        var number_of_babies_date = __$("number_of_babies_date").value.trim();
        number_of_babies_date = createDate(number_of_babies_date);
        number_of_babies_date = mergeDateTime(number_of_babies_date, time);
        __$("number_of_babies_date").value = dateTimeFormatted(number_of_babies_date);
      }
    }
  }
  function updateDateOtherFields(group){
    var outcome_date = createDate(__$("baby" + group + "_outcome_date").value.trim());
    var delivery_mode_date = createDate(__$("baby" + group + "_delivery_mode_date").value.trim());
    var date = __$("date_of_delivery" + group).value.trim();
    var time = padZeros(outcome_date.getHours(),2) + ":" + padZeros(outcome_date.getMinutes(),2);
    if(isValidTimeFormat(time)){
      date = createDate(date);
      date = mergeDateTime(date, time);
      __$("baby" + group + "_outcome_date").value = dateTimeFormatted(date);
    }
    date = __$("date_of_delivery" + group).value.trim();
    time = padZeros(delivery_mode_date.getHours(),2) + ":" + padZeros(delivery_mode_date.getMinutes(),2);
    if(isValidTimeFormat(time)){
      date = createDate(date);
      date = mergeDateTime(date, time);
      __$("baby" + group + "_delivery_mode_date").value = dateTimeFormatted(date);
    }
    var number_of_babies_date = createDate(__$("number_of_babies_date").value.trim());

    date = __$("date_of_delivery" + group).value.trim();
    time = padZeros(number_of_babies_date.getHours(),2) + ":" + padZeros(number_of_babies_date.getMinutes(),2);
    if(group == 1 && isValidTimeFormat(time)){
      number_of_babies_date = createDate(number_of_babies_date);
      number_of_babies_date = mergeDateTime(number_of_babies_date, time);
      __$("number_of_babies_date").value = dateTimeFormatted(number_of_babies_date);
    }
  }
  // Every 500 milliseconds update the Next/Finish button
  function updateNextFinish(){
    if (tstInputTarget.value == '')
      $('nextButton').innerHTML = '<span>Finish</span>';
    else
      $('nextButton').innerHTML = '<span>Next</span>'
    setTimeout(updateNextFinish, 500);
  }
  function calculateBabyOutcomeDate(baby){
    var baby_time = __$("time_of_delivery" + baby).value.trim();
    var b_date = __$("date_of_delivery" + baby).value.trim() + " 00:00";
    var baby_date = createDate(b_date);
    merged_date = mergeDateTime(baby_date, baby_time);
    baby_date_map += baby + "," +  dateTimeFormatted(merged_date) + "!";
    document.forms[0].action = "/encounters/create/<%= params[:patient_id] %>?baby_date_map=" + baby_date_map;
  }
  function weightAlert(){
    if(!$('weight_label')){
      var div = document.createElement("div");
      div.id = "weight_label";
      div.className = "statusLabel";  

      gender = $("baby_gender" + baby_num).value;
      if (gender == "Male"){
        maxi = 4500.0;
        mini = 2500.0;
      }else if (gender == "Female"){
        maxi = 4400.0;
        mini = 2400.0;
      }
      $("inputFrame" + tstCurrentPage).appendChild(div);

    }
    weight = $("touchscreenInput" + tstCurrentPage).value.trim();
    if (weight != ""){
      $('weight_label').innerHTML = ((weight > maxi )? "<i style='font-size: 1.2em;color: red;float: right;'> Over Weight</i>" : ((weight < mini)? "<i  style='font-size: 1.2em;float: right;color: red;'>Under Weight</i>"  : ""));
      if (weight < maxi && weight > mini){$('weight_label').innerHTML = "<i style='float:right;font-size:1.2em;'>  Normal Weight</i>";}
    }else {       
      $('weight_label').innerHTML = "<i style='float:left;font-size:1.2em;'>  Enter Weight</i>";
    }   
  }
  function checkBabyObs(baby){
    id1 = "baby_outcome" + baby + "_name";
    id2 = "baby_outcome" + baby + "_status";
    string =  __$(id1).value + "--" + __$(id2).value + "!";
    baby_obs += string;
    document.forms[0].action = "/encounters/create/<%= params[:patient_id] %>?baby_obs=" + baby_obs;
  }
</script>

<style type="text/css">
  #space { display:inline; font-size:1.2em; }
  #Unknown {display: none;}
  #num {display: none;}

  .n #Unknown{
    display: block;
  }
  #summary {
    padding:10px;
    font-size:1.8em;
  }
  #char {
    display: none;
  }
  .title {
    text-decoration:underline;
    margin-right:10px;
  }

  .red_alert {color:black;background:red;border:2px solid gray;}
  .yellow_alert {color:black;background:yellow;border:2px solid gray;}
  .normal {color:black;}

  #red_apgar_alert {
    background:red;
  }
  #yellow_apgar_alert {    
    background:yellow;    
  }
  #normal_apgar_alert, #red_apgar_alert, #yellow_apgar_alert {
    border-radius: 10px;
    -moz-user-select: none;
    height: 110px;
    color:black;
    width: 85%;
    border:2px solid gray;
    font-size: 30px;
    text-align: center;
    margin-left:auto;
    margin-right:auto;   
    margin-top: 40px;
    vertical-align: middle;
  }

  #tt_page_summary .inputFrameClass { height: 84%;}

  #qwerty{ display:none; }

  .numericKeyboard #char, #slash, #star, #plus, #date, #minus, #comma, #percent {
    display: none;
  }

  #selectWindow{
    -moz-user-select: none;
    display: table;
    width: 85%;
    height:55%;
    border:1px solid #999999;
    align: center;
    border-spacing: 8px;
    margin-left:auto;
    margin-right:auto;
    border-radius: 10px;
    background: white;
    margin-top: 17px;
  }
  .butt{
    font-family: sans-serif;
    font-size:1.1em;
    font-weight: bold;
    -moz-border-radius: 5px;
    border-radius: 10px;
    display:table-cell;
    background: url('/images/btn_blue.png');
    border:1px solid #999999;
    border-color:gray;
    color: white;
    vertical-align: middle;
    height: auto;
    width: auto;
    max-width: 73px;
    text-align: center;    
  }
  .leftButt, .value{
    font-size:1.3em;
    border-radius: 4px;
    font-weight: bold;
    background: white;
    display:table-cell;
    border:1px solid #999999;
    height: auto;
    color: rgb(5, 30, 5);
    width: auto;
    vertical-align: middle;
    text-align: center;
    max-width: 73px;

  }
  .value{
    height: 40px;
    font-weight: bold;
  }
  .boardRow{
    display: table-row;
    -moz-border-radius: 5px;
    border-radius: 5px;
    border-spacing: 5px;
  }
  #row1{
    display: table-row;
    -moz-border-radius: 5px;
    border-radius: 5px;
    border-spacing: 5px 5px 5px 5px;
  }
  #alertsTable{
    -moz-user-select: none;
    display: table;
    border-radius: 4px;
    background: gray;
    border-spacing: 1px;
    width: 98%;
    height:auto;
    border:1px solid #999999;
    vertical-align: middle;
    margin-left:auto;
    margin-top: 12px;
    margin-right:auto;
    max-height: 99%;
    overflow: auto;
  }
  .alertsRow, .alertsHeaderRow{
    display: table-row;
    height: 65px !important;
  }
  .alertsTitle, .alertsHeader, .alertsCell{
    display: table-cell;
    border: solid 1px lightgray;
    font-size: 28px;
    vertical-align: middle;   
    text-align: center;
    background: white;
  }
  .alertsHeader, .alertsTitle{
    font-weight: bold;
    text-align: center;
    background: white;
  }




</style>

<form id='outcome' action="/encounters/create" method='post'>
  <%= hidden_field_tag "patient_id", @patient.id %>
  <%= hidden_field_tag "encounter[patient_id]", @patient.id %>
  <%@presentation = [""] + Concept.find_by_name("PRESENTATION").concept_answers.collect{|c| c.name} %>
  <%@baby_outcome = [""] + Concept.find_by_name("BABY OUTCOME").concept_answers.collect{|c| c.name} %>
  <% @main_outcomes = [""] + Concept.find_by_name("MATERNITY OUTCOME").concept_members_names rescue [] %>

  <% @main_outcomes.concat(["Referred out"]).uniq if @location.upcase == "LABOUR WARD" %>
  <% @delivery_period = ["", "DELIVERED IN THE WARD",
    "DELIVERED BEFORE ARRIVAL",
    "DELIVERED IN THEATRE",
    "DELIVERED IN ANTENATAL WARD"] %>
  <% @mode_of_delivery = ["", "Forceps delivery", "Breech delivery"] %>
  <% @main_outcomes = @main_outcomes - ["Admitted"]%>

<%# @main_outcomes = @main_outcomes - ["Discharged"] if @children_names.size == 0%>

  <% @main_outcomes = @main_outcomes - ["Discharged"] if !@location.upcase.include?("POST") && !@location.upcase.include?("ANTE") %>

<%# @admission_section = ["", "ANTENATAL WARD", "LABOUR WARD", "GYNECOLOGY", "HDU"] %>
  <% @admission_section = @admission_wards %>

  <% if @facility.upcase.eql?("KAMUZU CENTRAL HOSPITAL")
    # @admission_section = @admission_section << "POSTNATAL WARD"
    @admission_section = @admission_section - ["Post-Natal Ward (High Risk)", "Post-Natal Ward (Low Risk)"]
  else
    # @admission_section << "POSTNATAL WARD - HIGH RISK"
    # @admission_section << "POSTNATAL WARD - LOW RISK"
    @admission_section = @admission_section - ["Post-Natal Ward"]
  end %>

  <%@delivery_mode = [""] + Concept.find_by_name("DELIVERY MODE").concept_answers.collect{|c| c.name} %>
  <%@procedure_done = [""] + Concept.find_by_name("PROCEDURE DONE").concept_answers.collect{|c| c.name}.sort %>
  <%@procedure_done = @procedure_done.insert(0, @procedure_done.delete_at(@procedure_done.index("None")))%>
  <%@postpartum_type = ["", "TOTAL POSTPARTUM HYSTERECTOMY", "SUB-TOTAL POSTPARTUM HYSTERECTOMY"]%>
  <%@discharged_to_where = [["",""], ["Home", "Home"],
    ["Home - Waiting", "Home - Waiting"],
    ["Another Health Facility", "Another Health Facility"]]%>
  <%@health_facility = ["", "KCH"]%>

  <%= hidden_field_tag "encounter[encounter_type_name]", "UPDATE OUTCOME" %>
  <%= hidden_field_tag "encounter[patient_id]", @patient.id %>
  <%= hidden_field_tag "encounter[encounter_datetime]",
    (session[:datetime] ? session[:datetime].to_time : (session[:datetime] ? session[:datetime].to_time :
        DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>
  <%= hidden_field_tag "encounter[provider_id]", session[:user_id] %>

  <%
  # A condition for redirection to the HIV Status Update page if the patient has not been tested

  @admission_section = @admission_section - [(Location.current_location.name rescue "")]

  condition = "if($('discharge_outcome').value.toUpperCase() == 'DISCHARGED') {\
$('next_url').disabled = false;} else {$('next_url').disabled = true; }"

  if @patient.current_hiv_status.nil?

    condition = "if($('discharge_outcome').value.toUpperCase() == 'DISCHARGED') {document.forms[0].method='post'; document.forms[0].action = \
  'update_hiv_status?patient_id=#{@patient.id}';} \
  else {$('next_url').disabled = true; }"

  elsif (@patient.current_hiv_status[0].upcase rescue "").eql?("NOT TESTED")

    condition = "if($('discharge_outcome').value.toUpperCase() == 'DISCHARGED') {document.forms[0].method='post'; document.forms[0].action = \
  'update_hiv_status?patient_id=#{@patient.id}';} \
  else {$('next_url').disabled = true; }"

  end
%>
  <% options = {
    :id =>"discharge_outcome",
    :helpText => 'Outcome',
    :tt_onUnLoad => condition
  } %>
  <%= hidden_field_tag("observations[][concept_name]", "OUTCOME") %>
  <%= select_tag("observations[][value_coded_or_text]", options_for_select(@main_outcomes.sort()), options)%>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time :
        DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

  <% if CoreService.get_global_property_value('extra_delivery_mode')%>
    <% @delivery_mode.concat(["FORCEPS DELIVERY"]) %>
  <%end%>

  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

  <% options = {
    :id => "discharged_to_where",
    :field_type => 'text',
    :helptext =>"Discharged to where?",
    :tt_onUnLoad => "if($('discharged_to_where').value.toUpperCase() == 'HOME - WAITING' || " +
      "$('discharged_to_where').value.toUpperCase() == 'ANOTHER HEALTH FACILITY')\
  {$('discharged_to_where_value_coded_or_text').value = $('discharged_to_where').value; \
  $('next_url').disabled = false;} else {$('next_url').disabled = true;}"
  }%>

  <% options[:condition] = "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED')" %>

  <%= select_tag("discharged_to_where", options_for_select(@discharged_to_where), options)%>

  <% options = {
    :id => "health_facility",
    :field_type => 'text',
    :helptext =>"Which health facility",
    :allowFreeText => true,
    :ajaxURL => "/encounters/locations?search_string=",
    :tt_onUnLoad => "$('discharged_to_where_value_coded_or_text').value = $('health_facility').value;"
  }%>

  <% options[:condition] = "($('discharged_to_where').value.toUpperCase() == 'ANOTHER HEALTH FACILITY')" %>

  <%= select_tag("health_facility", options_for_select(@health_facility), options)%>
<%#= text_field_tag("health_facility", nil, options)%>

  <%= hidden_field_tag("observations[][concept_name]", "DISCHARGED") %>
  <%= hidden_field_tag("observations[][value_coded_or_text]", "", {:id => 'discharged_to_where_value_coded_or_text'}) %>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>


  <% options = {
    :id => "admission_section",
    :field_type => 'text',
    :helptext =>"Select admission section",
    :condition => "($('discharge_outcome').value.toUpperCase() == 'ADMITTED')"
  }%>

  <%= hidden_field_tag("observations[][concept_name]", "ADMISSION SECTION") %>
  <%= select_tag("observations[][value_coded_or_text]", options_for_select(@admission_section), options)%>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

<%# options = {
:id => "delivery_period",
:field_type => 'text',
:helptext =>"Delivery Period",
:condition => "($('discharge_outcome').value == 'Delivered')"
} %>
<%#= select_tag("observations[][value_coded_or_text]", options_for_select(@delivery_period), options)%>
<%#= hidden_field_tag("observations[][concept_name]", "DELIVERY PERIOD") %>
<%#= hidden_field_tag("observations[][patient_id]", @patient.id) %>
<%#= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>


  <%
  prefixes = {
    1=>"st",
    2=>"nd",
    3=>"rd",
    4=>"th",
    5=>"th",
    6=>"th",
    7=>"th",
    8=>"th",
    9=>"th",
    10=>"th"
  }
%>

  <% options = {
    :id => "perineum",
    :field_type => 'text',
    :helptext =>"Perineum",
    :condition => (@location.downcase == "ante-natal ward" ? "false" :
        "($('discharge_outcome').value.toUpperCase() == 'DELIVERED')")
  }%>
  <%= hidden_field_tag("observations[][concept_name]", "PERINEUM") %>
  <%= select_tag("observations[][value_coded_or_text]",
    options_for_select(["", "Intact", "Tear", "Episiotomy", "Laceration"]), options)%>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

  <% options = {
    :id => "tear",
    :field_type => 'text',
    :helptext =>"Tear Extent",
    :condition => (@location.downcase == "ante-natal ward" ? "false" :
        "($('perineum').value.toUpperCase() == 'TEAR')"),
    :tt_onLoad => '__$("touchscreenInput" + tstCurrentPage).style.display = "none";'
  }%>

  <%= hidden_field_tag("observations[][concept_name]", "TEAR") %>
  <%= select_tag("observations[][value_coded_or_text]",
    options_for_select([
        ["", ""],
        ["1<sup>o</sup>", "1 Degree"],
        ["2<sup>o</sup>", "2 Degrees"],
        ["3<sup>o</sup>", "3 Degrees"],
        ["4<sup>o</sup>", "4 Degrees"]]), options)%>

  <!-- DIAGNOSIS -->


<%# This options hash allows us to define our options in one place %>
  <% options = {
    :helpText => 'Select discharge diagnosis',
    :allowFreeText => 'true',
    :ajaxURL => "/encounters/diagnoses?search_string=",
    :textCase => "upper",
    :tt_pageStyleClass => "n qwertyKeyboardOnly",
    :condition => (@location.downcase == "ante-natal ward" ? "false" :
        "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED')")
  } %>

  <% options[:id] = 'diagnosis0' %>
  <% options[:tt_onLoad] = "__$('Unknown').innerHTML='<span>N/A</span>'; " +
    "__$('Unknown').onclick=function(){__$('touchscreenInput'+tstCurrentPage).value='N/A'}; " +
    "$('nextButton').innerHTML = '<span>Finish</span>';" %>

  <% options[:optional] = 'true' %>
  <%= text_field_tag("observations[][value_coded_or_text]", nil, options) %>
  <%= hidden_field_tag("observations[][concept_name]", "DIAGNOSIS", options) %>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", DateTime.now()) %>


  <% 10.times do |counter| %>
    <% options[:condition] = (@location.downcase == "ante-natal ward" && counter > 0 ? "false" :
        "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED') && __$('diagnosis#{counter}').value != '' && " +
        "__$('diagnosis0').value != 'N/A'" ) %>

    <% options[:helpText] = "Select the next diagnosis" %>
    <% options[:tt_pageStyleClass] = "qwertyKeyboardOnly" %>

    <% options[:id] = "diagnosis#{counter + 1}" %>

    <%= text_field_tag("observations[][value_coded_or_text]", nil, options) %>
    <%= hidden_field_tag("observations[][concept_name]", "DIAGNOSIS", options) %>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", DateTime.now()) %>

    <% counter += 1 %>
  <% end %>

  <% 10.times do |counter| %>
    <% options = {
      :id => "estimated_time_of_delivery",
      :field_type => 'time',
      :helptext =>"Estimated Time of Delivery",
      :condition => "(tstFormElements[#{counter}].value == 'BORN BEFORE ARRIVAL')"
    }%>
    <%= text_field_tag("observations[][value_time]", nil, options)%>
    <%= hidden_field_tag("observations[][concept_name]", "ESTIMATED TIME FOR DELIVERY BEFORE ARRIVAL")%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", DateTime.now()) %>

    <% options = {
      :id => "estimated_date_of_delivery",
      :field_type => 'date',
      :helptext =>"Estimated Date of Delivery",
      :condition => "(tstFormElements[#{counter}].value == 'BORN BEFORE ARRIVAL')"
    }%>
    <%= text_field_tag("observations[][value_datetime]", nil, options)%>
    <%= hidden_field_tag("observations[][concept_name]", "ESTIMATED DATE")%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", DateTime.now()) %>

    <% counter += 1 %>
  <% end %>

  <% (1..5).each do |proc| %>

    <% options = {
      :id => "procedure_done#{proc}",
      :field_type => 'text',
      :helptext =>"#{proc}<sup>#{prefixes[proc]}</sup> Procedure Done",
      :tt_onUnLoad => "cedure = $('procedure_done#{proc}').value",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('discharge_outcome').value.toUpperCase() == 'DELIVERED' || " +
          "$('discharge_outcome').value.toUpperCase() == 'DISCHARGED') #{proc > 1 ?
        "&& (__$('procedure_done#{proc - 1}').value != '' && __$('procedure_done#{proc - 1}').value != 'None')":"" }"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>

    <%
    if proc > 1
      options["optional"] = "true"
    end
  %>

    <%
    @procedure_done = @procedure_done - ["None"] if proc > 1
  %>
    <%= hidden_field_tag("observations[][concept_name]", "PROCEDURE DONE") %>
    <%= select_tag("observations[][value_coded_or_text]", options_for_select(@procedure_done), options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=hysterectomy&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toUpperCase() == 'HYSTERECTOMY')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "HYSTERECTOMY DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=biopsy&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toUpperCase() == 'BIOPSY')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "BIOPSY DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=bilateral_tubal_ligation&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toUpperCase() == 'BILATERAL TUBAL LIGATION')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "BILATERAL TUBAL LIGATION DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=myomectomy&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toUpperCase() == 'MYOMECTOMY')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "MYOMECTOMY DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=ceclage&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toUpperCase() == 'CECLAGE')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "CECLAGE DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=cystectomy&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toUpperCase() == 'CYSTECTOMY')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "CYSTECTOMY DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=malsupilisation&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toUpperCase() == 'MARSUPILISATION')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "MALSUPILISATION DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=excision&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toUpperCase() == 'EXCISION')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "EXCISION DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=incision_and_drainage&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toLowerCase().trim().match('incision and drainage'))"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "INCISION AND DRAINAGE DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=caesarean_section&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toUpperCase() == 'CAESAREAN SECTION')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "CAESAREAN SECTION DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=exam_under_anaesthesia&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toUpperCase() == 'EXAM UNDER ANAESTHESIA')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "EXAM UNDER ANAESTHESIA DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=evacuation&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toUpperCase() == 'EVACUATION/MANUAL VACUUM ASPIRATION')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "EVACUATION/MVA DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=dilation_and_curettage&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toUpperCase() == 'DILATION AND CURETTAGE')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "DILATION AND CURETTAGE DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

    <% options = {
      :id => "procedure_diagnosis#{proc}",
      :field_type => 'text',
      :ajaxURL => "/encounters/procedure_diagnoses?procedure=laparatomy&search_string=",
      :helptext =>"Reason For Procedure",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('procedure_done#{proc}').value.toUpperCase() == 'EXPLORATORY LAPARATOMY +/- ADNEXECTOMY')"),
      :tt_pageStyleClass => "qwertyKeyboardOnly"
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "LAPARATOMY DIAGNOSIS") %>
    <%= select_tag("observations[][value_coded_or_text]", nil, options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]", (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>
  <% end %>

  <% options = {
    :id => "number_of_babies",
    :field_type => 'number',
    :helptext =>"Number of babies",
    :condition => (@location.downcase == "ante-natal ward" ? "false" :
        "($('discharge_outcome').value.toUpperCase() == 'DELIVERED' || $('discharge_outcome').value.toUpperCase() == 'DISCHARGED')"),
    :tt_pageStyleClass => "Numeric NumbersOnly",
    :absoluteMin => 1
  }%>
  <%= hidden_field_tag("observations[][concept_name]", "NUMBER OF BABIES")%>
  <%= text_field_tag("observations[][value_coded_or_text]", nil, options)%>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]",
    (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M"),
    {
      :id => "number_of_babies_date"
    }) %>


  <% (1..10).each do |baby| %>
    <% options = {
      :id => "baby_outcome#{baby}_name",
      :field_type => 'text',
      :helptext =>"#{baby}<sup>#{prefixes[baby]}</sup> Baby Name",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED' && parseInt($('number_of_babies').value) > #{baby - 1})")
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "BABY IDENTIFIER") %>
    <%= select_tag("observations[][value_coded_or_text]", options_for_select(@children_names), options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]",
      (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M"),
      {
        :id => "baby#{baby}_outcome_date_status"
      }) %>

    <% options = {
      :id => "baby_outcome#{baby}_status",
      :field_type => 'text',
      :tt_onUnLoad => "checkBabyObs(#{baby});",
      :helptext =>"#{baby}<sup>#{prefixes[baby]}</sup> Baby: Outcome",
      :condition => (@location.downcase == "ante-natal ward" ? "false" :
          "($('discharge_outcome').value.toUpperCase() == 'DISCHARGED' && parseInt($('number_of_babies').value) > #{baby - 1})")
    }%>
    <%= hidden_field_tag("observations[][concept_name]", "STATUS OF BABY") %>
    <%= select_tag("observations[][value_coded_or_text]", options_for_select(["Alive", "Dead"]), options)%>
    <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
    <%= hidden_field_tag("observations[][obs_datetime]",
      (session[:datetime] ? session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M"),
      {
        :id => "baby#{baby}_outcome_date_status"
      }) %>

  <%end%>

  <% options = {
    :id => "date_of_death",
    :field_type => "date",
    :helptext =>"Date of Death",
    :condition => "$('discharge_outcome').value.toUpperCase() == 'PATIENT DIED'"
  }%>
  <%= hidden_field_tag("observations[][concept_name]",  "DATE OF DEATH")%>
  <%= text_field_tag("observations[][value_datetime]",   nil, options)%>
  <%= hidden_field_tag("observations[][patient_id]",    @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]",  (session[:datetime] ?
        session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

  <% options = {
    :id => "time_of_death",
    :field_type => "advancedTime",
    :helptext =>"Time of Death",
    :condition => "$('discharge_outcome').value.toUpperCase() == 'PATIENT DIED'"
  }%>


  <%= hidden_field_tag("observations[][concept_name]",  "TIME OF DEATH")%>
  <%= text_field_tag("observations[][value_time]",   nil, options)%>
  <%= hidden_field_tag("observations[][patient_id]",    @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]",  (session[:datetime] ?
        session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>


  <% options = {
    :id => "place_of_death",
    :field_type => 'text',
    :helptext =>"Place of Death",
    :condition => "$('discharge_outcome').value.toUpperCase() == 'PATIENT DIED'"
  }%>
  <%= hidden_field_tag("observations[][concept_name]",  "PLACE OF DEATH")%>
  <%= select_tag("observations[][value_coded_or_text]", options_for_select([" ", "Home", "Current Facility", "On The Way", "Other" ]), options)%>
  <%= hidden_field_tag("observations[][patient_id]",    @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]",  (session[:datetime] ?
        session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>

  <% options = {
    :id => "death_diagnoses",
    :helpText => 'Select Reason For Death',
    :allowFreeText => 'true',
    :ajaxURL => "/encounters/diagnoses?search_string=",
    :textCase => "upper",
    :tt_pageStyleClass => "n qwertyKeyboardOnly",
    :condition => "$('discharge_outcome').value.toUpperCase() == 'PATIENT DIED'"
  } %>

  <%= text_field_tag("observations[][value_coded_or_text]", nil, options) %>
  <%= hidden_field_tag("observations[][concept_name]", "DIAGNOSIS", options) %>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", DateTime.now()) %>

  <% options = {
    :id => "condition_at_death",
    :field_type => 'text',
    :helptext =>"Condition At Death",
    :tt_onLoad => "$('nextButton').innerHTML = '<span>Finish</span>'",
    :condition => "$('discharge_outcome').value.toUpperCase() == 'PATIENT DIED'"
  }%>
  <%= hidden_field_tag("observations[][concept_name]",  "CONDITION AT DEATH")%>
  <%= select_tag("observations[][value_coded_or_text]", options_for_select([" ", "Antenatal", "Postpartum", "Intrapartum"]), options)%>
  <%= hidden_field_tag("observations[][patient_id]",    @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]",  (session[:datetime] ?
        session[:datetime].to_time : DateTime.now()).strftime("%Y-%m-%d %H:%M")) %>


<%#= hidden_field_tag "next_url", "/encounters/new/admission_diagnosis/?patient_id=#{@patient.id}", {:disabled => true} %>

  <% if @location.downcase == "ante-natal ward" %>
    <%= hidden_field_tag "next_url", "/patients/show/#{@patient.id}", {:disabled => true} %>
  <% else %>
    <%= hidden_field_tag "next_url", "/encounters/new/refer_out/?patient_id=#{@patient.id}", {:disabled => true} %>
  <% end %>

  <%= submit_tag "Finish" %>

</form>
